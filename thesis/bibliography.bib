@inproceedings{bloemen2017,
title = "Explicit State Model Checking with Generalized B{\"u}chi and Rabin Automata",
abstract = "In the automata theoretic approach to explicit state LTL model checking, the synchronized product of the model and an automaton that represents the negated formula is checked for emptiness. In practice, a (transition-based generalized) B{\"u}chi automaton (TGBA) is used for this procedure.This paper investigates whether using a more general form of acceptance, namely transition-based generalized Rabin automata (TGRAs), improves the model checking procedure. TGRAs can have signi cantly fewer states than TGBAs, however the corresponding emptiness checking procedure is more involved. With recent advances in probabilistic model checking and LTL to TGRA translators, it is only natural to ask whether checking a TGRA directly is more advantageous in practice.We designed a multi-core TGRA checking algorithm and performed experiments on a subset of the models and formulas from the 2015 Model Checking Contest. We observed that our algorithm can be used to replace a TGBA checking algorithm without losing performance. In general, we found little to no improvement by checking TGRAs directly.",
keywords = "Model checking, Explicit state, LTL, omega-automata, on-the-fly, generalised B{\"u}chi Automaton, generalised Rabin Automaton, parallel algorithms, multi-core",
author = "Bloemen, Vinent 
and Duret-Lutz, Alexandre 
and {van de Pol}, Jaco",
year = "2017",
month = "7",
doi = "10.1145/3092282.3092288",
language = "English",
isbn = "978-1-4503-5077-8",
pages = "50--59",
booktitle = "SPIN 2017",
publisher = "Association for Computing Machinery (ACM)",
address = "United States",
}

@InProceedings{spin2013,
author="Babiak, Tom{\'a}{\v{s}}
and Badie, Thomas
and Duret-Lutz, Alexandre
and K{\v{r}}et{\'i}nsk{\'y}, Mojm{\'i}r
and Strej{\v{c}}ek, Jan",
editor="Bartocci, Ezio
and Ramakrishnan, C. R.",
title="Compositional Approach to Suspension and Other Improvements to LTL Translation",
booktitle="Model Checking Software",
year="2013",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="81--98",
abstract="Recently, there was defined a fragment of LTL (containing fairness properties among other interesting formulae) whose validity over a given infinite word depends only on an arbitrary suffix of the word. Building upon an existing translation from LTL to B{\"u}chi automata, we introduce a compositional approach where subformulae of this fragment are translated separately from the rest of an input formula and the produced automata are composed in a way that the subformulae are checked only in relevant accepting strongly connected components of the final automaton. Further, we suggest improvements over some procedures commonly applied to generalized B{\"u}chi automata, namely over generalized acceptance simplification and over degeneralization. Finally we show how existing simulation-based reductions can be implemented in a signature-based framework in a way that improves the determinism of the automaton.",
isbn="978-3-642-39176-7",
doi={10.1007/978-3-642-39176-7_6}
}

@inproceedings{spot,
  author = {Duret-Lutz, Alexandre
  and Lewkowicz, Alexandre
  and Fauchille, Amaury
  and Michaud, Thibaud
  and Renault, Etienne
  and Xu, Laurent},
  title = {Spot 2.0 --- a framework for {LTL} and $\omega$-automata
		  manipulation},
  booktitle = {Proceedings of the 14th International Symposium on
		  Automated Technology for Verification and Analysis
		  (ATVA'16)},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer},
  volume = {9938},
  pages = {122--129},
  year = {2016},
  month = oct,
  pdf = {adl/duret.16.atva2.pdf},
  abstract = {We present Spot 2.0, a C++ library with Python bindings
		  and an assortment of command-line tools designed to
		  manipulate LTL and $\omega$-automata in batch. New
		  automata-manipulation tools were introduced in Spot 2.0;
		  they support arbitrary acceptance conditions, as
		  expressible in the Hanoi Omega Automaton format. Besides
		  being useful to researchers who have automata to process,
		  its Python bindings can also be used in interactive
		  environments to teach $\omega$-automata and model checking.},
  doi = {10.1007/978-3-319-46520-3_8}
}

@InProceedings{ltl3tela,
author="Major, Juraj
and Blahoudek, Franti{\v{s}}ek
and Strej{\v{c}}ek, Jan
and Sasar{\'a}kov{\'a}, Miriama
and Zbon{\v{c}}{\'a}kov{\'a}, Tatiana",
editor="Chen, Yu-Fang
and Cheng, Chih-Hong
and Esparza, Javier",
title="ltl3tela: LTL to Small Deterministic or Nondeterministic Emerson-Lei Automata",
booktitle="Automated Technology for Verification and Analysis",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="357--365",
abstract="The paper presents a new tool ltl3tela translating LTL to deterministic or nondeterministic transition-based Emerson-Lei automata (TELA). Emerson-Lei automata use generic acceptance formulae with basic terms corresponding to B{\"u}chi and co-B{\"u}chi acceptance. The tool combines algorithms of Spot library, a new translation of LTL to TELA via alternating automata, a pattern-based automata reduction method, and few other heuristics. Experimental evaluation shows that ltl3tela can produce deterministic automata that are, on average, noticeably smaller than deterministic TELA produced by state-of-the-art translators Delag, Rabinizer 4, and Spot. For nondeterministic automata, the improvement over Spot is smaller, but still measurable.",
isbn="978-3-030-31784-3"
}

@Inbook{hungarian_method,
author="Kuhn, Harold W.",
editor="J{\"u}nger, Michael
and Liebling, Thomas M.
and Naddef, Denis
and Nemhauser, George L.
and Pulleyblank, William R.
and Reinelt, Gerhard
and Rinaldi, Giovanni
and Wolsey, Laurence A.",
title="The Hungarian Method for the Assignment Problem",
bookTitle="50 Years of Integer Programming 1958-2008: From the Early Years to the State-of-the-Art",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="29--47",
abstract="This paper has always been one of my favorite ``children,'' combining as it does elements of the duality of linear programming and combinatorial tools from graph theory. It may be of some interest to tell the story of its origin.",
isbn="978-3-540-68279-0",
doi="10.1007/978-3-540-68279-0_2",
url="https://doi.org/10.1007/978-3-540-68279-0_2"
}


